[{"/home/rashad/Downloads/StockApp/stock-app/src/index.js":"1","/home/rashad/Downloads/StockApp/stock-app/src/App.js":"2","/home/rashad/Downloads/StockApp/stock-app/src/reportWebVitals.js":"3","/home/rashad/Downloads/StockApp/stock-app/src/Components/js/Home.js":"4","/home/rashad/Downloads/StockApp/stock-app/src/Components/js/UserContext.js":"5","/home/rashad/Downloads/StockApp/stock-app/src/Components/js/Login.js":"6","/home/rashad/Downloads/StockApp/stock-app/src/Components/js/Register.js":"7","/home/rashad/Downloads/StockApp/stock-app/src/Components/js/Validation.js":"8","/home/rashad/Downloads/StockApp/stock-app/src/Components/js/LoginNavbar.js":"9","/home/rashad/Downloads/StockApp/stock-app/src/Components/js/Watchlist.js":"10","/home/rashad/Downloads/StockApp/stock-app/src/Components/js/Navbar.js":"11","/home/rashad/Downloads/StockApp/stock-app/src/Components/js/TestPage.js":"12","/home/rashad/Downloads/StockApp/stock-app/src/Components/js/TradingView/TradingView-MainChart.js":"13","/home/rashad/Downloads/StockApp/stock-app/src/Components/js/TradingView/TradingView-Financials.js":"14","/home/rashad/Downloads/StockApp/stock-app/src/Components/js/TradingView/TradingView-Profile.js":"15"},{"size":579,"mtime":1608730714572,"results":"16","hashOfConfig":"17"},{"size":1907,"mtime":1608968455917,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":1608263316996,"results":"19","hashOfConfig":"17"},{"size":1514,"mtime":1608988471959,"results":"20","hashOfConfig":"17"},{"size":116,"mtime":1608806884711,"results":"21","hashOfConfig":"17"},{"size":9442,"mtime":1608836569673,"results":"22","hashOfConfig":"17"},{"size":14707,"mtime":1608835371062,"results":"23","hashOfConfig":"17"},{"size":1309,"mtime":1608806888042,"results":"24","hashOfConfig":"17"},{"size":1166,"mtime":1608968354449,"results":"25","hashOfConfig":"17"},{"size":2318,"mtime":1608983005239,"results":"26","hashOfConfig":"17"},{"size":735,"mtime":1608820116103,"results":"27","hashOfConfig":"17"},{"size":1132,"mtime":1608975686258,"results":"28","hashOfConfig":"17"},{"size":2272,"mtime":1608988007432,"results":"29","hashOfConfig":"17"},{"size":1132,"mtime":1608989243665,"results":"30","hashOfConfig":"17"},{"size":1149,"mtime":1608989231181,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},"r1dsgz",{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"35"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"35"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"35"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"35"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"35"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/rashad/Downloads/StockApp/stock-app/src/index.js",["70"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport bootstrap from '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["71","72"],"/home/rashad/Downloads/StockApp/stock-app/src/App.js",["73"],"import Home from './Components/js/Home';\nimport Navbar from './Components/js/LoginNavbar';\nimport Login from './Components/js/Login';\nimport Register from './Components/js/Register';\nimport { BrowserRouter, Switch, Route, Redirect } from \"react-router-dom\";\nimport { UserContext } from './Components/js/UserContext';\nimport React, { useState, useMemo, useEffect } from 'react';\nimport './App.css';\nimport Watchlist from './Components/js/Watchlist';\nimport TestPage from './Components/js/TestPage';\n\nfunction App() {\n\n  const [user, setUser] = useState({\n    name: \"default\",\n    email: \"default@email.com\",\n    password: \"password\",\n    authenticated: false\n\n  });\n  useEffect (()=>{sessionStorage.setItem(\"sessionName\", user.name)} , [user.name])\n  useEffect (()=>{sessionStorage.setItem(\"sessionEmail\", user.email)} , [user.email])\n  useEffect (()=>{sessionStorage.setItem(\"sessionPassword\", user.password)} , [user.password])\n  useEffect (()=>{sessionStorage.setItem(\"sessionAuthenticated\", user.authenticated)} , [user.authenticated])\n  \n \n\n  const value = useMemo(() => ({ user, setUser }), [user, setUser])\n\n\n  return (\n    <UserContext.Provider value={value}>\n      <div className=\"App\">\n\n      \n        <BrowserRouter>\n          <Switch>\n          <Route path=\"/\" exact >\n              <Redirect to=\"/watchlist\" />\n            </Route>\n            <Route path=\"/home\" exact >\n              <Home />\n            </Route>\n            <Route path=\"/login\" exact >\n              <Login />\n            </Route>\n            <Route path=\"/register\" exact >\n              <Register/>\n            </Route>\n            <Route path=\"/watchlist\" exact> \n              <Watchlist/> \n            </Route>\n            <Route path=\"/test-page\" exact> \n              <TestPage/> \n            </Route>\n          </Switch>\n\n        </BrowserRouter>\n      </div>\n    </UserContext.Provider>\n  );\n}\n\nexport default App;\n","/home/rashad/Downloads/StockApp/stock-app/src/reportWebVitals.js",[],"/home/rashad/Downloads/StockApp/stock-app/src/Components/js/Home.js",["74","75","76","77","78","79","80","81","82","83"],"/home/rashad/Downloads/StockApp/stock-app/src/Components/js/UserContext.js",["84","85","86"],"import React, { createContext, useEffect, useState } from 'react';\n\n\n\nexport const UserContext = createContext();\n\n\n","/home/rashad/Downloads/StockApp/stock-app/src/Components/js/Login.js",["87","88","89","90","91","92","93","94"],"import React, { Component, useContext, useEffect, useState } from 'react';\nimport { validateFields } from './Validation';\nimport classnames from 'classnames';\nimport { UserContext } from './UserContext';\nimport '../css/Login.css'\nimport axios from 'axios';\nimport { json } from 'body-parser';\nimport Navbar from './LoginNavbar';\n\n\n\nfunction Login() {\n    const { user, setUser } = useContext(UserContext);\n\n\n\n    const callServer = false;\n\n\n    const [email, setEmail] = useState({\n        value: '',\n        validateOnChange: false,\n        error: ''\n    });\n\n    const [password, setPassword] = useState({\n        value: '',\n        validateOnChange: false,\n        error: ''\n    });\n \n    const [submitCalled, setSubmitCalled] = useState(false);\n    const [allFieldsValidated, setAllFieldsValidated] = useState(false);\n\n\n\n    function loginFunction() {\n\n\n        console.log(`password.value before sending api request ${password.value}`)\n        axios.post(`/api/users/login/id/${email.value}/${password.value}`).then(res => {\n            if (res.data[0] === `access granted`) {\n                setUser({\n                    name: res.data[1],\n                    email: email.value,\n                    password: password.value,\n                    authenticated: true\n                });\n                console.log(`access granted ${res.data[1]}`);\n                sessionStorage.setItem('sessionName', res.data[1]);\n                \n            }\n        }).catch((err) => {\n            console.log(err)\n        });\n\n\n        \n        console.log(`Login: sessionStorage: ${sessionStorage.getItem(\"sessionName\")}`)\n        sessionStorage.setItem('sessionEmail', user.email);\n        console.log(`Login: sessionStorage: ${sessionStorage.getItem(\"sessionEmail\")}`)\n        sessionStorage.setItem('sessionAuthenticated', user.authenticated);\n\n        \n\n\n\n\n    }\n\n\n\n\n\n\n    /*\n     * validates the field onBlur if sumbit button is not clicked\n     * set the validateOnChange to true for that field\n     * check for error\n     */\n    function handleBlur(validationFunc, evt) {\n        const field = evt.target.name;\n\n        if (field === 'email' && email.validateOnChange === false && submitCalled === false) {\n            var temp = {\n                value: email.value,\n                validateOnChange: true,\n                error: validationFunc(email.value)\n            }\n            setEmail(temp);\n        }\n        else if (field === 'password' && password.validateOnChange === false && submitCalled === false) {\n            var temp = {\n                value: password.value,\n                validateOnChange: true,\n                error: validationFunc(password.value)\n            }\n            setPassword(temp);\n        }\n\n        return;\n    }\n\n\n\n    /*\n     * update the value in state for that field\n     * check for error if validateOnChange is true\n     */\n    function handleChange(validationFunc, evt) {\n        console.log(`handle change called`)\n        const field = evt.target.name;\n        console.log(field);\n        const fieldVal = evt.target.value;\n        console.log(email.value);\n\n\n        if (field === 'email' && email.validateOnChange === true) {\n            console.log('opta')\n            var temp = {\n                value: fieldVal,\n                validateOnChange: email.validateOnChange,\n                error: validationFunc(fieldVal)\n            }\n            setEmail(temp)\n        }\n        else if (field === 'email' && email.validateOnChange === false) {\n            console.log('optb')\n            var temp = {\n\n                value: fieldVal,\n                validateOnChange: email.validateOnChange,\n                error: ''\n            }\n\n            setEmail(temp);\n        }\n        else if (field === 'password' && password.validateOnChange === true) {\n            console.log('optc')\n            var temp = {\n                value: fieldVal,\n                validateOnChange: email.validateOnChange,\n                error: validationFunc(fieldVal)\n            }\n            setPassword(temp)\n        }\n        else if (field === 'password' && password.validateOnChange === false) {\n            console.log('optd')\n            var temp = {\n                value: fieldVal,\n                validateOnChange: email.validateOnChange,\n                error: ''\n            }\n            setPassword(temp);\n        }\n\n\n\n    }\n\n\n\n\n\n    /*\n     * validate all fields\n     * check if all fields are valid if yes then submit the Form\n     * otherwise set errors for the feilds in the state\n     */\n    function handleSubmit(evt) {\n        console.log(\"handle submit called\");\n        evt.preventDefault();\n        // validate all fields\n        console.log(`${email.value}  ${password.value}`);\n        const emailError = validateFields.validateEmail(email.value);\n        const passwordError = validateFields.validatePassword(password.value);\n\n        if ([emailError, passwordError].every(e => e === false)) {\n            // no errors submit the form\n            console.log(`email error and pass word error are false`)\n            loginFunction(email.value, password.value);\n\n            // clear state and show all fields are validated\n            setAllFieldsValidated(true);\n            showAllFieldsValidated();\n        } else {\n            // update the state with errors\n\n            setEmail(email.value, true, emailError);\n            setPassword(password.value, true, passwordError);\n\n        }\n    }\n\n    function showAllFieldsValidated() {\n        setTimeout(() => {\n            setAllFieldsValidated(false);\n        }, 1500);\n    }\n\n    function moveToRegister() {\n        window.location.href = \"/Register/\"\n    }\n\n\n\n\n\n    return (\n        <div> \n            <Navbar/>\n            <div className=\"Form col-md-8 col-lg-6\">\n                <div className=\"card\">\n\n                    <h4 className=\"card-title text-center\">{user.email}</h4>\n\n\n                    <div className=\"card-body\">\n                        {allFieldsValidated && (\n                            <p className=\"text-success text-center\">\n                                Success, All fields are validated\n                            </p>\n                        )}\n\n                        {/* Form Starts Here */}\n                        <form onSubmit={evt => handleSubmit(evt)}>\n\n\n\n                            {/* Email field */}\n                            <div className=\"form-group\">\n                                <input\n                                    type=\"email\"\n                                    name=\"email\"\n                                    value={email.value}\n                                    placeholder={\"Enter email here\"}\n                                    className={classnames(\n                                        'form-control',\n                                        { 'is-valid': email.error === false },\n                                        { 'is-invalid': email.error }\n                                    )}\n                                    onChange={evt =>\n                                        handleChange(validateFields.validateEmail, evt)\n                                    }\n                                    onBlur={evt =>\n                                        handleBlur(validateFields.validateEmail, evt)\n                                    }\n                                />\n                                <div className=\"invalid-feedback\">{email.error}</div>\n                            </div>\n\n                            {/* Password field */}\n                            <div className=\"form-group\">\n                                <input\n                                    type=\"password\"\n                                    name=\"password\"\n                                    value={password.value}\n                                    placeholder=\"Enter your password\"\n                                    className={classnames(\n                                        'form-control',\n                                        { 'is-valid': password.error === false },\n                                        { 'is-invalid': password.error }\n                                    )}\n                                    onChange={evt =>\n                                        handleChange(validateFields.validatePassword, evt)\n                                    }\n                                    onBlur={evt =>\n                                        handleBlur(validateFields.validatePassword, evt)\n                                    }\n                                />\n                                <div className=\"invalid-feedback\">{password.error}</div>\n                            </div>\n\n                            <button\n                                type=\"submit\"\n                                className=\"btn btn-primary \"\n                                onMouseDown={() => setSubmitCalled(true)}>\n                                Login\n                            </button>\n\n                            <button className=\"btn btn-light \"\n                                onClick={moveToRegister}\n                                style={{ margin: '25px' }}>\n                                Sign Up\n                            </button>\n\n\n\n                           \n\n\n\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n\n}\n\nexport default Login;","/home/rashad/Downloads/StockApp/stock-app/src/Components/js/Register.js",["95","96","97","98","99","100","101","102","103","104","105","106","107"],"import React, { Component, useContext, useState } from 'react';\nimport { validateFields } from './Validation';\nimport classnames from 'classnames';\nimport axios from 'axios';\nimport '../css/Register.css';\nimport Navbar from './LoginNavbar';\nimport { UserContext } from './UserContext';\n\n\n\n\n\n\nfunction Register() {\n\n    const { user, setUser } = useContext(UserContext);\n\n    const initialState = {\n        name: {\n            value: '',\n            validateOnChange: false,\n            error: ''\n        },\n        email: {\n            value: '',\n            validateOnChange: false,\n            error: ''\n        },\n        password: {\n            value: '',\n            validateOnChange: false,\n            error: ''\n        },\n        confirmPassword: {\n            value: \"\",\n            validateOnChange: false,\n            error: \"\"\n        },\n\n        submitCalled: false,\n        allFieldsValidated: false\n    };\n\n    const [name, setName] = useState({\n        value: '',\n        validateOnChange: false,\n        error: ''\n    });\n\n    const [email, setEmail] = useState({\n        value: '',\n        validateOnChange: false,\n        error: ''\n    });\n\n    const [password, setPassword] = useState({\n        value: '',\n        validateOnChange: false,\n        error: ''\n    });\n\n    const [confirmPassword, setConfirmPassword] = useState({\n        value: '',\n        validateOnChange: false,\n        error: ''\n    });\n\n    const [submitCalled, setSubmitCalled] = useState(false);\n    const [allFieldsValidated, setAllFieldsValidated] = useState(false);\n\n    function registerFunction(name, email, pass) {\n        var Ticker = \"AAPL\"\n        var Market = \"NASDAQ\"\n        var Notes = [\n            \"Buy\",\n            \"Sell\"\n        ]\n\n\n\n\n\n        axios.post(`/api/users/register/newUser/${name}/${email}/${pass}/stock/${Ticker}/${Market}/Notes/${Notes}`).then(res => {\n            console.log(res);\n        }).catch((err) => {\n            console.log(err);\n        })\n\n        //const [user, setUser] = this.context; \n\n        //setUser({\n\n    }\n\n    /*\n     * validates the field onBlur if sumbit button is not clicked\n     * set the validateOnChange to true for that field\n     * check for error\n     */\n    function handleBlur(validationFunc, evt) {\n        const field = evt.target.name;\n\n        if (field === 'name' && name.validateOnChange === false && submitCalled === false) {\n            var temp = {\n                value: name.value,\n                validateOnChange: true,\n                error: validationFunc(name.value)\n            }\n            setName(temp);\n        }\n        else if (field === 'email' && email.validateOnChange === false && submitCalled === false) {\n            var temp = {\n                value: email.value,\n                validateOnChange: true,\n                error: validationFunc(email.value)\n            }\n            setEmail(temp);\n        }\n        else if (field === 'password' && password.validateOnChange === false && submitCalled === false) {\n            var temp = {\n                value: password.value,\n                validateOnChange: true,\n                error: validationFunc(password.value)\n            }\n            setPassword(temp);\n        }\n        else if (field === 'confirmPassword' && password.validateOnChange === false && submitCalled === false) {\n            var temp = {\n                value: password.value,\n                validateOnChange: true,\n                error: validationFunc(password.value, confirmPassword.value)\n            }\n            setPassword(temp);\n        }\n\n        return;\n    }\n\n    /*\n     * update the value in state for that field\n     * check for error if validateOnChange is true\n     */\n    function handleChange(validationFunc, evt) {\n        console.log(`handle change called`)\n        const field = evt.target.name;\n        console.log(field);\n        const fieldVal = evt.target.value;\n        console.log(email.value);\n\n        if (field === 'name' && name.validateOnChange === true) {\n\n            var temp = {\n                value: fieldVal,\n                validateOnChange: name.validateOnChange,\n                error: validationFunc(fieldVal)\n            }\n            setName(temp)\n        }\n        else if (field === 'name' && name.validateOnChange === false) {\n\n            var temp = {\n                value: fieldVal,\n                validateOnChange: name.validateOnChange,\n                error: ''\n            }\n\n            setName(temp);\n        }\n\n        else if (field === 'email' && email.validateOnChange === true) {\n\n            var temp = {\n                value: fieldVal,\n                validateOnChange: email.validateOnChange,\n                error: validationFunc(fieldVal)\n            }\n            setEmail(temp)\n        }\n        else if (field === 'email' && email.validateOnChange === false) {\n\n            var temp = {\n\n                value: fieldVal,\n                validateOnChange: email.validateOnChange,\n                error: ''\n            }\n            setEmail(temp);\n        }\n        else if (field === 'password' && password.validateOnChange === true) {\n\n            var temp = {\n                value: fieldVal,\n                validateOnChange: password.validateOnChange,\n                error: validationFunc(fieldVal)\n            }\n            setPassword(temp)\n        }\n        else if (field === 'password' && password.validateOnChange === false) {\n\n            var temp = {\n                value: fieldVal,\n                validateOnChange: password.validateOnChange,\n                error: ''\n            }\n            setPassword(temp);\n        }\n        else if (field === 'confirmPassword' && confirmPassword.validateOnChange === true) {\n\n            var temp = {\n                value: fieldVal,\n                validateOnChange: confirmPassword.validateOnChange,\n                error: validationFunc(password.value, fieldVal)\n            }\n            setConfirmPassword(temp)\n        }\n        else if (field === 'confirmPassword' && confirmPassword.validateOnChange === false) {\n\n            var temp = {\n                value: fieldVal,\n                validateOnChange: confirmPassword.validateOnChange,\n                error: ''\n            }\n            setConfirmPassword(temp);\n        }\n\n    }\n\n\n\n\n\n    /*\n     * validate all fields\n     * check if all fields are valid if yes then submit the Form\n     * otherwise set errors for the feilds in the state\n     */\n    function handleSubmit(evt) {\n        evt.preventDefault();\n        // validate all fields\n\n        const nameError = validateFields.validateName(name.value);\n        const emailError = validateFields.validateEmail(email.value);\n        const passwordError = validateFields.validatePassword(password.value);\n        console.log(`handle submit ${confirmPassword.value} ${password.value} `)\n        const confirmPasswordError = validateFields.validateConfirmPassword(password.value, confirmPassword.value);\n        if ([nameError, emailError, passwordError, confirmPasswordError].every(e => e === false)) {\n            // no errors submit the form\n            registerFunction(name.value, email.value, password.value);\n\n            // clear state and show all fields are validated\n            setName(initialState.email);\n            setEmail(initialState.email);\n            setPassword(initialState.password);\n            setConfirmPassword(initialState.confirmPassword);\n            setSubmitCalled(false);\n            setAllFieldsValidated(true)\n            showAllFieldsValidated();\n        } else {\n            // update the state with errors\n\n            var n = {\n                value: name.value,\n                validateOnChange: true,\n                error: nameError\n            }\n            setName(n)\n            var e = {\n                value: email.value,\n                validateOnChange: true,\n                error: emailError\n            }\n            setEmail(e)\n            var p = {\n                value: password.value,\n                validateOnChange: true,\n                error: passwordError\n            }\n            setPassword(p)\n            var cp = {\n                value: confirmPassword.value,\n                validateOnChange: true,\n                error: confirmPasswordError\n            }\n            setConfirmPassword(cp)\n        }\n\n    }\n\n    function showAllFieldsValidated() {\n        setTimeout(() => {\n            setAllFieldsValidated(false);\n        }, 1500);\n    }\n\n    function moveToLogin() {\n        window.location.href = \"/login/\"\n    }\n\n\n\n\n\n\n\n    return (\n        <div>\n\n            <Navbar />\n            <div className=\"Form col-md-8 col-lg-6\">\n                <div className=\"card\">\n\n                    <h4 className=\"card-title text-center\">Sign Up</h4>\n\n\n                    <div className=\"card-body\">\n                        {allFieldsValidated && (\n                            <p className=\"text-success text-center\">\n                                Success, All fields are validated\n                            </p>\n                        )}\n\n                        {/* Form Starts Here */}\n                        <form onSubmit={evt => handleSubmit(evt)}>\n\n                            {/* Name field */}\n                            <div className=\"form-group\">\n                                <input\n                                    type=\"text\"\n                                    name=\"name\"\n                                    value={name.value}\n                                    placeholder=\"Enter your name\"\n                                    className={classnames(\n                                        'form-control',\n                                        { 'is-valid': name.error === false },\n                                        { 'is-invalid': name.error }\n                                    )}\n                                    onChange={evt =>\n                                        handleChange(validateFields.validateName, evt)\n                                    }\n                                    onBlur={evt =>\n                                        handleBlur(validateFields.validateName, evt)\n                                    }\n                                />\n                                <div className=\"invalid-feedback\">{name.error}</div>\n                            </div>\n\n                            {/* Email field */}\n                            <div className=\"form-group\">\n                                <input\n                                    type=\"email\"\n                                    name=\"email\"\n                                    value={email.value}\n                                    placeholder=\"Enter your email\"\n                                    className={classnames(\n                                        'form-control',\n                                        { 'is-valid': email.error === false },\n                                        { 'is-invalid': email.error }\n                                    )}\n                                    onChange={evt =>\n                                        handleChange(validateFields.validateEmail, evt)\n                                    }\n                                    onBlur={evt =>\n                                        handleBlur(validateFields.validateEmail, evt)\n                                    }\n                                />\n                                <div className=\"invalid-feedback\">{email.error}</div>\n                            </div>\n\n                            {/* Password field */}\n                            <div className=\"form-group\">\n                                <input\n                                    type=\"password\"\n                                    name=\"password\"\n                                    value={password.value}\n                                    placeholder=\"Enter your password\"\n                                    className={classnames(\n                                        'form-control',\n                                        { 'is-valid': password.error === false },\n                                        { 'is-invalid': password.error }\n                                    )}\n                                    onChange={evt =>\n                                        handleChange(validateFields.validatePassword, evt)\n                                    }\n                                    onBlur={evt =>\n                                        handleBlur(validateFields.validatePassword, evt)\n                                    }\n                                />\n                                <div className=\"invalid-feedback\">{password.error}</div>\n                            </div>\n                            {/* ConfirmPassword field */}\n                            <div className=\"form-group\">\n\n                                <input\n                                    type=\"password\"\n                                    name=\"confirmPassword\"\n                                    value={confirmPassword.value}\n                                    placeholder=\"Confirm\"\n                                    className={classnames(\n                                        'form-control',\n                                        { 'is-valid': confirmPassword.error === false },\n                                        { 'is-invalid': confirmPassword.error }\n                                    )}\n                                    onChange={evt =>\n                                        handleChange(validateFields.validateConfirmPassword, evt)\n                                    }\n                                    onBlur={evt =>\n                                        handleBlur(validateFields.validateConfirmPassword, evt)\n                                    }\n                                />\n                                <div className=\"invalid-feedback\">{confirmPassword.error}</div>\n                            </div>\n\n                            <button\n                                type=\"submit\"\n                                className=\"btn btn-primary \"\n                                onMouseDown={() => setSubmitCalled(true)}>\n                                Sign Up\n                            </button>\n\n                            <button className=\"btn btn-light \"\n                                onClick={moveToLogin}\n                                style={{ margin: '25px' }}>\n                                Login\n                            </button>\n\n\n\n\n\n\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\n\nexport default Register;","/home/rashad/Downloads/StockApp/stock-app/src/Components/js/Validation.js",[],"/home/rashad/Downloads/StockApp/stock-app/src/Components/js/LoginNavbar.js",[],"/home/rashad/Downloads/StockApp/stock-app/src/Components/js/Watchlist.js",["108","109","110","111","112","113","114","115","116","117","118","119","120","121","122"],"/home/rashad/Downloads/StockApp/stock-app/src/Components/js/Navbar.js",[],["123","124"],"/home/rashad/Downloads/StockApp/stock-app/src/Components/js/TestPage.js",["125","126"],"import React, { useEffect , useState } from 'react';\n\nfunction TestPage(props){\n    const script = document.createElement('script');\n   \n    useEffect( ()=> {\n        const symbol = props.name; \n        console.log(symbol);\n        script.src = 'https://s3.tradingview.com/external-embedding/embed-widget-mini-symbol-overview.js'\n        script.async = true;\n        script.innerHTML = JSON.stringify({ \n            \"symbol\": symbol,\n            \"width\": 200,\n            \"height\": 100,\n            \"locale\": \"en\",\n            \"dateRange\": \"12M\",\n            \"colorTheme\": \"light\",\n            \"trendLineColor\": \"#37a6ef\",\n            \"underLineColor\": \"#E3F2FD\",\n            \"isTransparent\": false,\n            \"autosize\": false,\n            \"largeChartUrl\": \"\" })\n            document.getElementById(\"myContainer\").appendChild(script);\n    }, []) ; \n    \n\n  \n        return(\n      <div id=\"myContainer\">\n        <div className=\"tradingview-widget-container\">\n           <div className=\"tradingview-widget-container__widget\">\n               \n            </div>\n        </div>\n     </div>\n        );\n \n    } export default TestPage;","/home/rashad/Downloads/StockApp/stock-app/src/Components/js/TradingView/TradingView-MainChart.js",["127","128","129","130"],"/home/rashad/Downloads/StockApp/stock-app/src/Components/js/TradingView/TradingView-Financials.js",["131","132"],"/home/rashad/Downloads/StockApp/stock-app/src/Components/js/TradingView/TradingView-Profile.js",["133","134","135"],{"ruleId":"136","severity":1,"message":"137","line":7,"column":8,"nodeType":"138","messageId":"139","endLine":7,"endColumn":17},{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","replacedBy":"143"},{"ruleId":"136","severity":1,"message":"144","line":2,"column":8,"nodeType":"138","messageId":"139","endLine":2,"endColumn":14},{"ruleId":"136","severity":1,"message":"145","line":1,"column":17,"nodeType":"138","messageId":"139","endLine":1,"endColumn":26},{"ruleId":"136","severity":1,"message":"146","line":1,"column":40,"nodeType":"138","messageId":"139","endLine":1,"endColumn":48},{"ruleId":"136","severity":1,"message":"147","line":4,"column":8,"nodeType":"138","messageId":"139","endLine":4,"endColumn":25},{"ruleId":"136","severity":1,"message":"148","line":4,"column":29,"nodeType":"138","messageId":"139","endLine":4,"endColumn":35},{"ruleId":"136","severity":1,"message":"149","line":4,"column":37,"nodeType":"138","messageId":"139","endLine":4,"endColumn":46},{"ruleId":"136","severity":1,"message":"150","line":4,"column":48,"nodeType":"138","messageId":"139","endLine":4,"endColumn":59},{"ruleId":"136","severity":1,"message":"151","line":5,"column":8,"nodeType":"138","messageId":"139","endLine":5,"endColumn":16},{"ruleId":"136","severity":1,"message":"152","line":14,"column":13,"nodeType":"138","messageId":"139","endLine":14,"endColumn":17},{"ruleId":"136","severity":1,"message":"153","line":14,"column":19,"nodeType":"138","messageId":"139","endLine":14,"endColumn":26},{"ruleId":"136","severity":1,"message":"154","line":15,"column":9,"nodeType":"138","messageId":"139","endLine":15,"endColumn":17},{"ruleId":"136","severity":1,"message":"155","line":1,"column":8,"nodeType":"138","messageId":"139","endLine":1,"endColumn":13},{"ruleId":"136","severity":1,"message":"145","line":1,"column":32,"nodeType":"138","messageId":"139","endLine":1,"endColumn":41},{"ruleId":"136","severity":1,"message":"146","line":1,"column":43,"nodeType":"138","messageId":"139","endLine":1,"endColumn":51},{"ruleId":"136","severity":1,"message":"156","line":1,"column":17,"nodeType":"138","messageId":"139","endLine":1,"endColumn":26},{"ruleId":"136","severity":1,"message":"145","line":1,"column":40,"nodeType":"138","messageId":"139","endLine":1,"endColumn":49},{"ruleId":"136","severity":1,"message":"157","line":7,"column":10,"nodeType":"138","messageId":"139","endLine":7,"endColumn":14},{"ruleId":"136","severity":1,"message":"158","line":17,"column":11,"nodeType":"138","messageId":"139","endLine":17,"endColumn":21},{"ruleId":"159","severity":1,"message":"160","line":93,"column":17,"nodeType":"138","messageId":"161","endLine":93,"endColumn":21},{"ruleId":"159","severity":1,"message":"160","line":129,"column":17,"nodeType":"138","messageId":"161","endLine":129,"endColumn":21},{"ruleId":"159","severity":1,"message":"160","line":140,"column":17,"nodeType":"138","messageId":"161","endLine":140,"endColumn":21},{"ruleId":"159","severity":1,"message":"160","line":149,"column":17,"nodeType":"138","messageId":"161","endLine":149,"endColumn":21},{"ruleId":"136","severity":1,"message":"156","line":1,"column":17,"nodeType":"138","messageId":"139","endLine":1,"endColumn":26},{"ruleId":"136","severity":1,"message":"152","line":16,"column":13,"nodeType":"138","messageId":"139","endLine":16,"endColumn":17},{"ruleId":"136","severity":1,"message":"153","line":16,"column":19,"nodeType":"138","messageId":"139","endLine":16,"endColumn":26},{"ruleId":"159","severity":1,"message":"160","line":112,"column":17,"nodeType":"138","messageId":"161","endLine":112,"endColumn":21},{"ruleId":"159","severity":1,"message":"160","line":120,"column":17,"nodeType":"138","messageId":"161","endLine":120,"endColumn":21},{"ruleId":"159","severity":1,"message":"160","line":128,"column":17,"nodeType":"138","messageId":"161","endLine":128,"endColumn":21},{"ruleId":"159","severity":1,"message":"160","line":161,"column":17,"nodeType":"138","messageId":"161","endLine":161,"endColumn":21},{"ruleId":"159","severity":1,"message":"160","line":172,"column":17,"nodeType":"138","messageId":"161","endLine":172,"endColumn":21},{"ruleId":"159","severity":1,"message":"160","line":181,"column":17,"nodeType":"138","messageId":"161","endLine":181,"endColumn":21},{"ruleId":"159","severity":1,"message":"160","line":191,"column":17,"nodeType":"138","messageId":"161","endLine":191,"endColumn":21},{"ruleId":"159","severity":1,"message":"160","line":200,"column":17,"nodeType":"138","messageId":"161","endLine":200,"endColumn":21},{"ruleId":"159","severity":1,"message":"160","line":209,"column":17,"nodeType":"138","messageId":"161","endLine":209,"endColumn":21},{"ruleId":"159","severity":1,"message":"160","line":218,"column":17,"nodeType":"138","messageId":"161","endLine":218,"endColumn":21},{"ruleId":"136","severity":1,"message":"162","line":4,"column":10,"nodeType":"138","messageId":"139","endLine":4,"endColumn":21},{"ruleId":"136","severity":1,"message":"163","line":5,"column":17,"nodeType":"138","messageId":"139","endLine":5,"endColumn":27},{"ruleId":"136","severity":1,"message":"164","line":5,"column":50,"nodeType":"138","messageId":"139","endLine":5,"endColumn":53},{"ruleId":"136","severity":1,"message":"147","line":6,"column":8,"nodeType":"138","messageId":"139","endLine":6,"endColumn":25},{"ruleId":"136","severity":1,"message":"165","line":7,"column":9,"nodeType":"138","messageId":"139","endLine":7,"endColumn":20},{"ruleId":"136","severity":1,"message":"166","line":8,"column":8,"nodeType":"138","messageId":"139","endLine":8,"endColumn":16},{"ruleId":"136","severity":1,"message":"167","line":11,"column":9,"nodeType":"138","messageId":"139","endLine":11,"endColumn":13},{"ruleId":"136","severity":1,"message":"153","line":14,"column":18,"nodeType":"138","messageId":"139","endLine":14,"endColumn":25},{"ruleId":"136","severity":1,"message":"168","line":22,"column":12,"nodeType":"138","messageId":"139","endLine":22,"endColumn":20},{"ruleId":"136","severity":1,"message":"169","line":22,"column":22,"nodeType":"138","messageId":"139","endLine":22,"endColumn":33},{"ruleId":"136","severity":1,"message":"170","line":23,"column":12,"nodeType":"138","messageId":"139","endLine":23,"endColumn":19},{"ruleId":"136","severity":1,"message":"171","line":23,"column":21,"nodeType":"138","messageId":"139","endLine":23,"endColumn":31},{"ruleId":"172","severity":1,"message":"173","line":40,"column":8,"nodeType":"174","endLine":40,"endColumn":10,"suggestions":"175"},{"ruleId":"136","severity":1,"message":"176","line":42,"column":12,"nodeType":"138","messageId":"139","endLine":42,"endColumn":15},{"ruleId":"136","severity":1,"message":"177","line":42,"column":17,"nodeType":"138","messageId":"139","endLine":42,"endColumn":23},{"ruleId":"140","replacedBy":"178"},{"ruleId":"142","replacedBy":"179"},{"ruleId":"136","severity":1,"message":"146","line":1,"column":29,"nodeType":"138","messageId":"139","endLine":1,"endColumn":37},{"ruleId":"172","severity":1,"message":"180","line":24,"column":8,"nodeType":"174","endLine":24,"endColumn":10,"suggestions":"181"},{"ruleId":"136","severity":1,"message":"145","line":1,"column":17,"nodeType":"138","messageId":"139","endLine":1,"endColumn":26},{"ruleId":"136","severity":1,"message":"148","line":2,"column":29,"nodeType":"138","messageId":"139","endLine":2,"endColumn":35},{"ruleId":"136","severity":1,"message":"149","line":2,"column":37,"nodeType":"138","messageId":"139","endLine":2,"endColumn":46},{"ruleId":"136","severity":1,"message":"182","line":5,"column":11,"nodeType":"138","messageId":"139","endLine":5,"endColumn":17},{"ruleId":"136","severity":1,"message":"146","line":1,"column":29,"nodeType":"138","messageId":"139","endLine":1,"endColumn":37},{"ruleId":"172","severity":1,"message":"180","line":25,"column":8,"nodeType":"174","endLine":25,"endColumn":10,"suggestions":"183"},{"ruleId":"136","severity":1,"message":"146","line":1,"column":28,"nodeType":"138","messageId":"139","endLine":1,"endColumn":36},{"ruleId":"136","severity":1,"message":"137","line":2,"column":8,"nodeType":"138","messageId":"139","endLine":2,"endColumn":17},{"ruleId":"172","severity":1,"message":"180","line":25,"column":8,"nodeType":"174","endLine":25,"endColumn":10,"suggestions":"184"},"no-unused-vars","'bootstrap' is defined but never used.","Identifier","unusedVar","no-native-reassign",["185"],"no-negated-in-lhs",["186"],"'Navbar' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'TradingViewWidget' is defined but never used.","'Themes' is defined but never used.","'BarStyles' is defined but never used.","'HEIKIN_ASHI' is defined but never used.","'Register' is defined but never used.","'user' is assigned a value but never used.","'setUser' is assigned a value but never used.","'localUse' is assigned a value but never used.","'React' is defined but never used.","'Component' is defined but never used.","'json' is defined but never used.","'callServer' is assigned a value but never used.","no-redeclare","'temp' is already defined.","redeclared","'UserContext' is defined but never used.","'useContext' is defined but never used.","'map' is defined but never used.","'createChart' is defined but never used.","'TestPage' is defined but never used.","'data' is assigned a value but never used.","'dataList' is assigned a value but never used.","'setDataList' is assigned a value but never used.","'display' is assigned a value but never used.","'setDisplay' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'user.email', 'user.name', and 'user.password'. Either include them or remove the dependency array.","ArrayExpression",["187"],"'arr' is assigned a value but never used.","'setArr' is assigned a value but never used.",["185"],["186"],"React Hook useEffect has missing dependencies: 'props.name' and 'script'. Either include them or remove the dependency array.",["188"],"'script' is assigned a value but never used.",["189"],["190"],"no-global-assign","no-unsafe-negation",{"desc":"191","fix":"192"},{"desc":"193","fix":"194"},{"desc":"193","fix":"195"},{"desc":"193","fix":"196"},"Update the dependencies array to be: [user.email, user.name, user.password]",{"range":"197","text":"198"},"Update the dependencies array to be: [props.name, script]",{"range":"199","text":"200"},{"range":"201","text":"200"},{"range":"202","text":"200"},[1406,1408],"[user.email, user.name, user.password]",[845,847],"[props.name, script]",[843,845],[873,875]]