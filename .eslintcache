[{"/home/rashad/Downloads/StockApp/stock-app/src/index.js":"1","/home/rashad/Downloads/StockApp/stock-app/src/App.js":"2","/home/rashad/Downloads/StockApp/stock-app/src/reportWebVitals.js":"3","/home/rashad/Downloads/StockApp/stock-app/src/Components/js/Home.js":"4","/home/rashad/Downloads/StockApp/stock-app/src/Components/js/UserContext.js":"5","/home/rashad/Downloads/StockApp/stock-app/src/Components/js/Login.js":"6","/home/rashad/Downloads/StockApp/stock-app/src/Components/js/Register.js":"7","/home/rashad/Downloads/StockApp/stock-app/src/Components/js/Validation.js":"8","/home/rashad/Downloads/StockApp/stock-app/src/Components/js/LoginNavbar.js":"9","/home/rashad/Downloads/StockApp/stock-app/src/Components/js/Watchlist.js":"10","/home/rashad/Downloads/StockApp/stock-app/src/Components/js/Navbar.js":"11","/home/rashad/Downloads/StockApp/stock-app/src/Components/js/TestPage.js":"12","/home/rashad/Downloads/StockApp/stock-app/src/Components/js/TradingView/TradingView-MainChart.js":"13","/home/rashad/Downloads/StockApp/stock-app/src/Components/js/TradingView/TradingView-Financials.js":"14","/home/rashad/Downloads/StockApp/stock-app/src/Components/js/TradingView/TradingView-Profile.js":"15","/home/rashad/Downloads/StockApp/stock-app/src/Components/js/TradingView/TradingView-TickerTape.js":"16","/home/rashad/Downloads/StockApp/stock-app/src/Components/js/Notes.js":"17"},{"size":579,"mtime":1608730714572,"results":"18","hashOfConfig":"19"},{"size":1907,"mtime":1608968455917,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":1608263316996,"results":"21","hashOfConfig":"19"},{"size":3995,"mtime":1609698554380,"results":"22","hashOfConfig":"19"},{"size":116,"mtime":1608806884711,"results":"23","hashOfConfig":"19"},{"size":9844,"mtime":1609352164258,"results":"24","hashOfConfig":"19"},{"size":14707,"mtime":1608835371062,"results":"25","hashOfConfig":"19"},{"size":1532,"mtime":1609355628691,"results":"26","hashOfConfig":"19"},{"size":955,"mtime":1609691789789,"results":"27","hashOfConfig":"19"},{"size":5202,"mtime":1609702126187,"results":"28","hashOfConfig":"19"},{"size":735,"mtime":1608820116103,"results":"29","hashOfConfig":"19"},{"size":104,"mtime":1609669710441,"results":"30","hashOfConfig":"19"},{"size":889,"mtime":1609698550072,"results":"31","hashOfConfig":"19"},{"size":1360,"mtime":1609699191235,"results":"32","hashOfConfig":"19"},{"size":1415,"mtime":1609699241487,"results":"33","hashOfConfig":"19"},{"size":3606,"mtime":1609540573935,"results":"34","hashOfConfig":"19"},{"size":3577,"mtime":1609699693225,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},"r1dsgz",{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"39"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"39"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"39"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"39"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"39"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"39"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"39"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"39"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"39"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"39"},"/home/rashad/Downloads/StockApp/stock-app/src/index.js",["86"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport bootstrap from '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["87","88"],"/home/rashad/Downloads/StockApp/stock-app/src/App.js",["89"],"import Home from './Components/js/Home';\nimport Navbar from './Components/js/LoginNavbar';\nimport Login from './Components/js/Login';\nimport Register from './Components/js/Register';\nimport { BrowserRouter, Switch, Route, Redirect } from \"react-router-dom\";\nimport { UserContext } from './Components/js/UserContext';\nimport React, { useState, useMemo, useEffect } from 'react';\nimport './App.css';\nimport Watchlist from './Components/js/Watchlist';\nimport TestPage from './Components/js/TestPage';\n\nfunction App() {\n\n  const [user, setUser] = useState({\n    name: \"default\",\n    email: \"default@email.com\",\n    password: \"password\",\n    authenticated: false\n\n  });\n  useEffect (()=>{sessionStorage.setItem(\"sessionName\", user.name)} , [user.name])\n  useEffect (()=>{sessionStorage.setItem(\"sessionEmail\", user.email)} , [user.email])\n  useEffect (()=>{sessionStorage.setItem(\"sessionPassword\", user.password)} , [user.password])\n  useEffect (()=>{sessionStorage.setItem(\"sessionAuthenticated\", user.authenticated)} , [user.authenticated])\n  \n \n\n  const value = useMemo(() => ({ user, setUser }), [user, setUser])\n\n\n  return (\n    <UserContext.Provider value={value}>\n      <div className=\"App\">\n\n      \n        <BrowserRouter>\n          <Switch>\n          <Route path=\"/\" exact >\n              <Redirect to=\"/watchlist\" />\n            </Route>\n            <Route path=\"/home\" exact >\n              <Home />\n            </Route>\n            <Route path=\"/login\" exact >\n              <Login />\n            </Route>\n            <Route path=\"/register\" exact >\n              <Register/>\n            </Route>\n            <Route path=\"/watchlist\" exact> \n              <Watchlist/> \n            </Route>\n            <Route path=\"/test-page\" exact> \n              <TestPage/> \n            </Route>\n          </Switch>\n\n        </BrowserRouter>\n      </div>\n    </UserContext.Provider>\n  );\n}\n\nexport default App;\n","/home/rashad/Downloads/StockApp/stock-app/src/reportWebVitals.js",[],"/home/rashad/Downloads/StockApp/stock-app/src/Components/js/Home.js",["90","91","92","93","94","95","96"],"import React, { useEffect, useContext, useState } from \"react\";\nimport '../css/Home.css'\nimport { UserContext } from \"./UserContext\";\nimport MainChart from \"./TradingView/TradingView-MainChart\"\nimport Financials from \"./TradingView/TradingView-Financials\";\nimport Profile from \"./TradingView/TradingView-Profile\";\nimport TickerTape from \"./TradingView/TradingView-TickerTape\";\nimport Cookies from 'js-cookie';\nimport Notes from \"./Notes\";\n\nfunction Home() {\n    const stock = Cookies.get(\"currentStock\");\n    console.log(stock);\n    function changeIndicators() {\n        if (indicatorString === \"Indicators On\") {\n            setIndicators(indicatorsOn);\n            setIndicatorString(\"Indicators Off\");\n\n        }\n        else {\n            setIndicators('false');\n            setIndicatorString(\"Indicators On\");\n        }\n    }\n\n    \n    const { user, setUser } = useContext(UserContext);\n    var localUse = {\n        name: sessionStorage.getItem('sessionName'),\n        email: sessionStorage.getItem('sessionEmail'),\n        password: sessionStorage.getItem('sessionPassword'),\n        authenticated: sessionStorage.getItem('sessionAuthenticated')\n    }\n    console.log(`Home: sessionStorage: ${sessionStorage.getItem(\"sessionName\")}`)\n    console.log(`Home: sessionStorage: ${sessionStorage.getItem(\"sessionEmail\")}`)\n\n\n\n    const [indicatorString, setIndicatorString] = useState(\"Indicators On\");\n    const [indicators, setIndicators] = useState('false');\n    const indicatorsOn = [\"BB@tv-basicstudies\", \"MACD@tv-basicstudies\", \"MASimple@tv-basicstudies\"]\n    const [buttonColor, setButtonColor] = useState('btn btn-light');\n\n\n\n\n\n\n\n\n\n\n\n    return (\n        <div>\n\n\n\n            <div className=\"StickyNav\">\n                <nav className=\"navbar  navbar-expand-sm \">\n\n                    <button className=\"navbar-toggler\" data-toggle=\"collapse\" data-target=\"#navbarMenu\">\n                        <span className=\"navbar-toggler-icon\"></span>\n                    </button>\n                    <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n                        <ul className=\"navbar-nav \">\n                            <li class=\"nav-item active\">\n                                <a class=\"nav-link\" href=\"/watchlist\">Watchlist</a>\n                            </li>\n                            <li className=\"nav-item\">\n                                <a href=\"#MainChart\" className=\"nav-link\">Chart</a>\n                            </li>\n                            <li className=\"nav-item\">\n                                <a href=\"#Financials\" className=\"nav-link\">Financials</a>\n                            </li>\n                            <li className=\"nav-item\">\n                                <a href=\"#Profile\" className=\"nav-link\">Profile</a>\n                            </li>\n\n                        </ul>\n                        <ul className=\"navbar-nav justify-content-end\">\n\n                            <li className=\"nav-item justify-content-end\">\n                                <div class=\"chartButtons\">\n                                    <div class=\"changeButton\">\n\n                                        <a className=\"nav-link\" onClick={changeIndicators}>{indicatorString}</a>\n\n                                    </div>\n                                </div>\n\n                            </li>\n\n                        </ul>\n                    </div>\n\n\n\n                </nav>\n\n                <TickerTape />\n            </div>\n\n\n\n\n\n\n\n\n            <MainChart name={stock} indicators={indicators} />\n\n\n\n\n            <div className=\"contain\">\n\n\n                <Financials name={stock} />\n\n            </div>\n\n\n            <div className=\"contain2\">\n                <Profile name={stock}  />\n            </div>\n            <div className=\"row\">\n                <div className=\"col-xl-6 justify-content-center\">\n                    <Notes />\n                </div>\n            </div>\n\n\n        </div>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    );\n} export default Home; ","/home/rashad/Downloads/StockApp/stock-app/src/Components/js/UserContext.js",["97","98","99"],"import React, { createContext, useEffect, useState } from 'react';\n\n\n\nexport const UserContext = createContext();\n\n\n","/home/rashad/Downloads/StockApp/stock-app/src/Components/js/Login.js",["100","101","102","103","104","105","106","107","108","109"],"import React, { Component, useContext, useEffect, useState } from 'react';\nimport { validateFields } from './Validation';\nimport classnames from 'classnames';\nimport { UserContext } from './UserContext';\nimport '../css/Login.css'\nimport axios from 'axios';\nimport { json } from 'body-parser';\nimport Navbar from './LoginNavbar';\nimport Cookies from 'js-cookie';\n\n\n\n\nfunction Login() {\n    const { user, setUser } = useContext(UserContext);\n    const [cookies, setCookies] = useState({})\n\n    \n\n\n\n\n    const callServer = false;\n\n\n    const [email, setEmail] = useState({\n        value: '',\n        validateOnChange: false,\n        error: ''\n    });\n\n    const [password, setPassword] = useState({\n        value: '',\n        validateOnChange: false,\n        error: ''\n    });\n\n    const [submitCalled, setSubmitCalled] = useState(false);\n    const [allFieldsValidated, setAllFieldsValidated] = useState(false);\n\n\n\n    function loginFunction() {\n\n\n        console.log(`password.value before sending api request ${password.value}`)\n        console.log(`email.value before sending api request ${email.value}`)\n        axios.post(`/api/users/login/id/${email.value}/${password.value}`).then(res => {\n            if (res.data[0] === `access granted`) {\n                setUser({\n                    name: res.data[1],\n                    email: email.value,\n                    password: password.value,\n                    authenticated: true\n                });\n                console.log(`access granted ${res.data[1]}`);\n                Cookies.set('name' , `${res.data[1]}` , { sameSite: 'strict' , expires : 1});\n                Cookies.set('email' , `${email.value}` , { sameSite: 'strict' , expires : 1});\n                Cookies.set('pass', `${password.value}` , {sameSite: 'strict' , expires: 1}) ; \n                sessionStorage.setItem('sessionName', res.data[1]);\n\n            }\n        }).catch((err) => {\n            console.log(err)\n        });\n\n\n\n        console.log(`Login: user.email: ${user.email}`)\n        sessionStorage.setItem('sessionEmail', user.email);\n        console.log(`Login: sessionStorage: ${sessionStorage.getItem(\"sessionEmail\")}`)\n        sessionStorage.setItem('sessionAuthenticated', user.authenticated);\n\n\n\n\n\n\n    }\n\n\n\n\n\n\n    /*\n     * validates the field onBlur if sumbit button is not clicked\n     * set the validateOnChange to true for that field\n     * check for error\n     */\n    function handleBlur(validationFunc, evt) {\n        const field = evt.target.name;\n\n        if (field === 'email' && email.validateOnChange === false && submitCalled === false) {\n            var temp = {\n                value: email.value,\n                validateOnChange: true,\n                error: validationFunc(email.value)\n            }\n            setEmail(temp);\n        }\n        else if (field === 'password' && password.validateOnChange === false && submitCalled === false) {\n            var temp = {\n                value: password.value,\n                validateOnChange: true,\n                error: validationFunc(password.value)\n            }\n            setPassword(temp);\n        }\n\n        return;\n    }\n\n\n\n    /*\n     * update the value in state for that field\n     * check for error if validateOnChange is true\n     */\n    function handleChange(validationFunc, evt) {\n        console.log(`handle change called`)\n        const field = evt.target.name;\n        console.log(field);\n        const fieldVal = evt.target.value;\n        console.log(email.value);\n\n\n        if (field === 'email' && email.validateOnChange === true) {\n            console.log('opta')\n            var temp = {\n                value: fieldVal,\n                validateOnChange: email.validateOnChange,\n                error: validationFunc(fieldVal)\n            }\n            setEmail(temp)\n        }\n        else if (field === 'email' && email.validateOnChange === false) {\n            console.log('optb')\n            var temp = {\n\n                value: fieldVal,\n                validateOnChange: email.validateOnChange,\n                error: ''\n            }\n\n            setEmail(temp);\n        }\n        else if (field === 'password' && password.validateOnChange === true) {\n            console.log('optc')\n            var temp = {\n                value: fieldVal,\n                validateOnChange: email.validateOnChange,\n                error: validationFunc(fieldVal)\n            }\n            setPassword(temp)\n        }\n        else if (field === 'password' && password.validateOnChange === false) {\n            console.log('optd')\n            var temp = {\n                value: fieldVal,\n                validateOnChange: email.validateOnChange,\n                error: ''\n            }\n            setPassword(temp);\n        }\n\n\n\n    }\n\n\n\n\n\n    /*\n     * validate all fields\n     * check if all fields are valid if yes then submit the Form\n     * otherwise set errors for the feilds in the state\n     */\n    function handleSubmit(evt) {\n        console.log(\"handle submit called\");\n        evt.preventDefault();\n        // validate all fields\n        console.log(`${email.value}  ${password.value}`);\n        const emailError = validateFields.validateEmail(email.value);\n        const passwordError = validateFields.validatePassword(password.value);\n\n        if ([emailError, passwordError].every(e => e === false)) {\n            // no errors submit the form\n            console.log(`email error and pass word error are false`)\n            loginFunction(email.value, password.value);\n\n            // clear state and show all fields are validated\n            setAllFieldsValidated(true);\n            showAllFieldsValidated();\n        } else {\n            // update the state with errors\n\n            setEmail(email.value, true, emailError);\n            setPassword(password.value, true, passwordError);\n\n        }\n    }\n\n    function showAllFieldsValidated() {\n        setTimeout(() => {\n            setAllFieldsValidated(false);\n        }, 1500);\n    }\n\n    function moveToRegister() {\n        window.location.href = \"/Register/\"\n    }\n\n\n\n\n\n    return (\n        <div>\n            <Navbar />\n            <div className=\"Form col-md-8 col-lg-6\">\n                <div className=\"card \" style={{ borderRadius: \"15px\" }}>\n\n                    <h4 className=\"card-title text-center\">{Cookies.get('name')}</h4>\n\n\n                    <div className=\"card-body\">\n                        {allFieldsValidated && (\n                            <p className=\"text-success text-center\">\n                                Success, All fields are validated\n                            </p>\n                        )}\n\n                        {/* Form Starts Here */}\n                        <form onSubmit={evt => handleSubmit(evt)}>\n\n\n\n                            {/* Email field */}\n                            <div className=\"form-group\">\n                                <input\n                                    type=\"email\"\n                                    name=\"email\"\n                                    value={email.value}\n                                    placeholder={\"Enter email here\"}\n                                    className={classnames(\n                                        'form-control',\n                                        { 'is-valid': email.error === false },\n                                        { 'is-invalid': email.error }\n                                    )}\n                                    onChange={evt =>\n                                        handleChange(validateFields.validateEmail, evt)\n                                    }\n                                    onBlur={evt =>\n                                        handleBlur(validateFields.validateEmail, evt)\n                                    }\n                                />\n                                <div className=\"invalid-feedback\">{email.error}</div>\n                            </div>\n\n                            {/* Password field */}\n                            <div className=\"form-group\">\n                                <input\n                                    type=\"password\"\n                                    name=\"password\"\n                                    value={password.value}\n                                    placeholder=\"Enter your password\"\n                                    className={classnames(\n                                        'form-control',\n                                        { 'is-valid': password.error === false },\n                                        { 'is-invalid': password.error }\n                                    )}\n                                    onChange={evt =>\n                                        handleChange(validateFields.validatePassword, evt)\n                                    }\n                                    onBlur={evt =>\n                                        handleBlur(validateFields.validatePassword, evt)\n                                    }\n                                />\n                                <div className=\"invalid-feedback\">{password.error}</div>\n                            </div>\n\n                            <button\n                                type=\"submit\"\n                                className=\"btn btn-primary \"\n                                onMouseDown={() => setSubmitCalled(true)}>\n                                Login\n                            </button>\n\n                            <button className=\"btn btn-light \"\n                                onClick={moveToRegister}\n                                style={{ margin: '25px' }}>\n                                Sign Up\n                            </button>\n\n\n\n\n\n\n\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n\n}\n\nexport default Login;","/home/rashad/Downloads/StockApp/stock-app/src/Components/js/Register.js",["110","111","112","113","114","115","116","117","118","119","120","121","122"],"import React, { Component, useContext, useState } from 'react';\nimport { validateFields } from './Validation';\nimport classnames from 'classnames';\nimport axios from 'axios';\nimport '../css/Register.css';\nimport Navbar from './LoginNavbar';\nimport { UserContext } from './UserContext';\n\n\n\n\n\n\nfunction Register() {\n\n    const { user, setUser } = useContext(UserContext);\n\n    const initialState = {\n        name: {\n            value: '',\n            validateOnChange: false,\n            error: ''\n        },\n        email: {\n            value: '',\n            validateOnChange: false,\n            error: ''\n        },\n        password: {\n            value: '',\n            validateOnChange: false,\n            error: ''\n        },\n        confirmPassword: {\n            value: \"\",\n            validateOnChange: false,\n            error: \"\"\n        },\n\n        submitCalled: false,\n        allFieldsValidated: false\n    };\n\n    const [name, setName] = useState({\n        value: '',\n        validateOnChange: false,\n        error: ''\n    });\n\n    const [email, setEmail] = useState({\n        value: '',\n        validateOnChange: false,\n        error: ''\n    });\n\n    const [password, setPassword] = useState({\n        value: '',\n        validateOnChange: false,\n        error: ''\n    });\n\n    const [confirmPassword, setConfirmPassword] = useState({\n        value: '',\n        validateOnChange: false,\n        error: ''\n    });\n\n    const [submitCalled, setSubmitCalled] = useState(false);\n    const [allFieldsValidated, setAllFieldsValidated] = useState(false);\n\n    function registerFunction(name, email, pass) {\n        var Ticker = \"AAPL\"\n        var Market = \"NASDAQ\"\n        var Notes = [\n            \"Buy\",\n            \"Sell\"\n        ]\n\n\n\n\n\n        axios.post(`/api/users/register/newUser/${name}/${email}/${pass}/stock/${Ticker}/${Market}/Notes/${Notes}`).then(res => {\n            console.log(res);\n        }).catch((err) => {\n            console.log(err);\n        })\n\n        //const [user, setUser] = this.context; \n\n        //setUser({\n\n    }\n\n    /*\n     * validates the field onBlur if sumbit button is not clicked\n     * set the validateOnChange to true for that field\n     * check for error\n     */\n    function handleBlur(validationFunc, evt) {\n        const field = evt.target.name;\n\n        if (field === 'name' && name.validateOnChange === false && submitCalled === false) {\n            var temp = {\n                value: name.value,\n                validateOnChange: true,\n                error: validationFunc(name.value)\n            }\n            setName(temp);\n        }\n        else if (field === 'email' && email.validateOnChange === false && submitCalled === false) {\n            var temp = {\n                value: email.value,\n                validateOnChange: true,\n                error: validationFunc(email.value)\n            }\n            setEmail(temp);\n        }\n        else if (field === 'password' && password.validateOnChange === false && submitCalled === false) {\n            var temp = {\n                value: password.value,\n                validateOnChange: true,\n                error: validationFunc(password.value)\n            }\n            setPassword(temp);\n        }\n        else if (field === 'confirmPassword' && password.validateOnChange === false && submitCalled === false) {\n            var temp = {\n                value: password.value,\n                validateOnChange: true,\n                error: validationFunc(password.value, confirmPassword.value)\n            }\n            setPassword(temp);\n        }\n\n        return;\n    }\n\n    /*\n     * update the value in state for that field\n     * check for error if validateOnChange is true\n     */\n    function handleChange(validationFunc, evt) {\n        console.log(`handle change called`)\n        const field = evt.target.name;\n        console.log(field);\n        const fieldVal = evt.target.value;\n        console.log(email.value);\n\n        if (field === 'name' && name.validateOnChange === true) {\n\n            var temp = {\n                value: fieldVal,\n                validateOnChange: name.validateOnChange,\n                error: validationFunc(fieldVal)\n            }\n            setName(temp)\n        }\n        else if (field === 'name' && name.validateOnChange === false) {\n\n            var temp = {\n                value: fieldVal,\n                validateOnChange: name.validateOnChange,\n                error: ''\n            }\n\n            setName(temp);\n        }\n\n        else if (field === 'email' && email.validateOnChange === true) {\n\n            var temp = {\n                value: fieldVal,\n                validateOnChange: email.validateOnChange,\n                error: validationFunc(fieldVal)\n            }\n            setEmail(temp)\n        }\n        else if (field === 'email' && email.validateOnChange === false) {\n\n            var temp = {\n\n                value: fieldVal,\n                validateOnChange: email.validateOnChange,\n                error: ''\n            }\n            setEmail(temp);\n        }\n        else if (field === 'password' && password.validateOnChange === true) {\n\n            var temp = {\n                value: fieldVal,\n                validateOnChange: password.validateOnChange,\n                error: validationFunc(fieldVal)\n            }\n            setPassword(temp)\n        }\n        else if (field === 'password' && password.validateOnChange === false) {\n\n            var temp = {\n                value: fieldVal,\n                validateOnChange: password.validateOnChange,\n                error: ''\n            }\n            setPassword(temp);\n        }\n        else if (field === 'confirmPassword' && confirmPassword.validateOnChange === true) {\n\n            var temp = {\n                value: fieldVal,\n                validateOnChange: confirmPassword.validateOnChange,\n                error: validationFunc(password.value, fieldVal)\n            }\n            setConfirmPassword(temp)\n        }\n        else if (field === 'confirmPassword' && confirmPassword.validateOnChange === false) {\n\n            var temp = {\n                value: fieldVal,\n                validateOnChange: confirmPassword.validateOnChange,\n                error: ''\n            }\n            setConfirmPassword(temp);\n        }\n\n    }\n\n\n\n\n\n    /*\n     * validate all fields\n     * check if all fields are valid if yes then submit the Form\n     * otherwise set errors for the feilds in the state\n     */\n    function handleSubmit(evt) {\n        evt.preventDefault();\n        // validate all fields\n\n        const nameError = validateFields.validateName(name.value);\n        const emailError = validateFields.validateEmail(email.value);\n        const passwordError = validateFields.validatePassword(password.value);\n        console.log(`handle submit ${confirmPassword.value} ${password.value} `)\n        const confirmPasswordError = validateFields.validateConfirmPassword(password.value, confirmPassword.value);\n        if ([nameError, emailError, passwordError, confirmPasswordError].every(e => e === false)) {\n            // no errors submit the form\n            registerFunction(name.value, email.value, password.value);\n\n            // clear state and show all fields are validated\n            setName(initialState.email);\n            setEmail(initialState.email);\n            setPassword(initialState.password);\n            setConfirmPassword(initialState.confirmPassword);\n            setSubmitCalled(false);\n            setAllFieldsValidated(true)\n            showAllFieldsValidated();\n        } else {\n            // update the state with errors\n\n            var n = {\n                value: name.value,\n                validateOnChange: true,\n                error: nameError\n            }\n            setName(n)\n            var e = {\n                value: email.value,\n                validateOnChange: true,\n                error: emailError\n            }\n            setEmail(e)\n            var p = {\n                value: password.value,\n                validateOnChange: true,\n                error: passwordError\n            }\n            setPassword(p)\n            var cp = {\n                value: confirmPassword.value,\n                validateOnChange: true,\n                error: confirmPasswordError\n            }\n            setConfirmPassword(cp)\n        }\n\n    }\n\n    function showAllFieldsValidated() {\n        setTimeout(() => {\n            setAllFieldsValidated(false);\n        }, 1500);\n    }\n\n    function moveToLogin() {\n        window.location.href = \"/login/\"\n    }\n\n\n\n\n\n\n\n    return (\n        <div>\n\n            <Navbar />\n            <div className=\"Form col-md-8 col-lg-6\">\n                <div className=\"card\">\n\n                    <h4 className=\"card-title text-center\">Sign Up</h4>\n\n\n                    <div className=\"card-body\">\n                        {allFieldsValidated && (\n                            <p className=\"text-success text-center\">\n                                Success, All fields are validated\n                            </p>\n                        )}\n\n                        {/* Form Starts Here */}\n                        <form onSubmit={evt => handleSubmit(evt)}>\n\n                            {/* Name field */}\n                            <div className=\"form-group\">\n                                <input\n                                    type=\"text\"\n                                    name=\"name\"\n                                    value={name.value}\n                                    placeholder=\"Enter your name\"\n                                    className={classnames(\n                                        'form-control',\n                                        { 'is-valid': name.error === false },\n                                        { 'is-invalid': name.error }\n                                    )}\n                                    onChange={evt =>\n                                        handleChange(validateFields.validateName, evt)\n                                    }\n                                    onBlur={evt =>\n                                        handleBlur(validateFields.validateName, evt)\n                                    }\n                                />\n                                <div className=\"invalid-feedback\">{name.error}</div>\n                            </div>\n\n                            {/* Email field */}\n                            <div className=\"form-group\">\n                                <input\n                                    type=\"email\"\n                                    name=\"email\"\n                                    value={email.value}\n                                    placeholder=\"Enter your email\"\n                                    className={classnames(\n                                        'form-control',\n                                        { 'is-valid': email.error === false },\n                                        { 'is-invalid': email.error }\n                                    )}\n                                    onChange={evt =>\n                                        handleChange(validateFields.validateEmail, evt)\n                                    }\n                                    onBlur={evt =>\n                                        handleBlur(validateFields.validateEmail, evt)\n                                    }\n                                />\n                                <div className=\"invalid-feedback\">{email.error}</div>\n                            </div>\n\n                            {/* Password field */}\n                            <div className=\"form-group\">\n                                <input\n                                    type=\"password\"\n                                    name=\"password\"\n                                    value={password.value}\n                                    placeholder=\"Enter your password\"\n                                    className={classnames(\n                                        'form-control',\n                                        { 'is-valid': password.error === false },\n                                        { 'is-invalid': password.error }\n                                    )}\n                                    onChange={evt =>\n                                        handleChange(validateFields.validatePassword, evt)\n                                    }\n                                    onBlur={evt =>\n                                        handleBlur(validateFields.validatePassword, evt)\n                                    }\n                                />\n                                <div className=\"invalid-feedback\">{password.error}</div>\n                            </div>\n                            {/* ConfirmPassword field */}\n                            <div className=\"form-group\">\n\n                                <input\n                                    type=\"password\"\n                                    name=\"confirmPassword\"\n                                    value={confirmPassword.value}\n                                    placeholder=\"Confirm\"\n                                    className={classnames(\n                                        'form-control',\n                                        { 'is-valid': confirmPassword.error === false },\n                                        { 'is-invalid': confirmPassword.error }\n                                    )}\n                                    onChange={evt =>\n                                        handleChange(validateFields.validateConfirmPassword, evt)\n                                    }\n                                    onBlur={evt =>\n                                        handleBlur(validateFields.validateConfirmPassword, evt)\n                                    }\n                                />\n                                <div className=\"invalid-feedback\">{confirmPassword.error}</div>\n                            </div>\n\n                            <button\n                                type=\"submit\"\n                                className=\"btn btn-primary \"\n                                onMouseDown={() => setSubmitCalled(true)}>\n                                Sign Up\n                            </button>\n\n                            <button className=\"btn btn-light \"\n                                onClick={moveToLogin}\n                                style={{ margin: '25px' }}>\n                                Login\n                            </button>\n\n\n\n\n\n\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\n\nexport default Register;","/home/rashad/Downloads/StockApp/stock-app/src/Components/js/Validation.js",["123"],"import validator from 'validator';\n\n/*\n * This class contains methods for validating fields using 'validator.js' library methods\n * The methods return error message if validation failed and false otherwise\n * You can use all supported validators and sanitizers of 'validator.js' libaray\n * See their docs here https://github.com/validatorjs/validator.js\n */\n\nclass ValidateFields {\n  \n  validateName(name){\n    if (validator.isEmpty(name)){\n      return \"Name is required\"\n    }\n    else {\n      return false; \n    }\n  }\n\n  validateTicker(ticker){\n    if (validator.isEmpty(ticker)){\n      return \"Ticker is required\"\n    }\n    else {\n      return false; \n    }\n  }\n\n  validateMarket(market){\n    const markets = ['NYSE', 'NASDAQ', 'TSX']\n  }\n\n  validateEmail(email) {\n    if (validator.isEmpty(email)) {\n      return 'Email is required';\n    } else if (!validator.isEmail(email)) {\n      return 'Invalid Email';\n    }\n    return false;\n  }\n\n  validatePassword(password) {\n    if (validator.isEmpty(password)) {\n      return 'Password is required';\n    } else if (!validator.isLength(password, { min: 8 })) {\n      return 'Password should be minimum 8 characters';\n    }\n    return false;\n  }\n  validateConfirmPassword(password, confirmPassword){\n    if (!validator.equals(password , confirmPassword)){\n      return \"Passwords must match\"; \n    }\n    else {\n      return false;\n    }\n  }\n}\n\n\n\nconst validateFields = new ValidateFields();\n\n// export the class instance, so we can import and use it anywhere\nexport { validateFields };","/home/rashad/Downloads/StockApp/stock-app/src/Components/js/LoginNavbar.js",[],"/home/rashad/Downloads/StockApp/stock-app/src/Components/js/Watchlist.js",["124","125","126","127","128","129","130"],"\nimport axios from 'axios';\nimport Navbar from './LoginNavbar';\n\nimport React, { useContext, useState, useEffect, map } from 'react'\n\nimport Cookies from 'js-cookie';\nimport '../css/Watchlist.css';\nfunction Watchlist() {\n\n    var data = (['test 1', 'test 2']);\n\n\n\n\n    const [ticker, setTicker] = useState('');\n    const [run, setRun] = useState(0);\n\n    const [user, setUser] = useState({\n        name: sessionStorage.getItem('sessionName'),\n        email: sessionStorage.getItem('sessionEmail'),\n        password: sessionStorage.getItem('sessionPassword'),\n        authenticated: sessionStorage.getItem('sessionAuthenticated')\n    });\n\n    const [watchlist, setWatchlist] = useState([]);\n\n\n    useEffect(() => {\n        getWatchlist()\n    }, [])\n\n\n    function getWatchlist() {\n        console.log(`get watchlist running`);\n\n        axios.post(`/api/users/watchlist/id/${Cookies.get(\"email\")}/${Cookies.get(\"pass\")}`).then((res) => {\n            if (res) {\n                setWatchlist(res.data)\n                console.log(`user.name ${Cookies.get(\"name\")}`)\n                console.log(` This is the res.data: ${JSON.stringify(res.data)}`)\n                console.log(\"setting watchlist to data\")\n                Cookies.set(\"watchlist\", res.data);\n            }\n        }).catch((err) => {\n            console.log(err);\n        })\n\n\n        console.log(`run added ${run}`);\n\n\n    }\n    const [tickerList, setTickerList] = useState();\n\n    useEffect(() => {\n        var tickerArray = [];\n        setTickerList(watchlist.map((element, num) => {\n            console.log(\"setTickerList is running\")\n            tickerArray[num] = element.Ticker;\n            return (\n                <div className=\"row justify-content-center\">\n                    <a className=\"list-group-item col-sm-8\" key={element._id} onClick={() => {\n                        console.log(\"selectStock: \");\n                        Cookies.set('currentStock', `${element.Ticker.toUpperCase()}`, { sameSite: 'strict', expires: 1 })\n                        console.log(\"current stock: \" + JSON.stringify(Cookies.get(\"currentStock\")));\n                        window.location.href = '/home'\n\n                    }}>\n                        <div>\n                            {element.Ticker.toUpperCase()}\n                        </div>\n                    </a>\n                    <button className=\"btn btn-dark col-sm-2\" onClick={() => { removeFunction(element) }}>Remove</button>\n                </div>\n            )\n        }))\n\n        Cookies.set('tickerList', JSON.stringify(tickerArray));\n\n    }, [watchlist])\n\n    function removeFunction(element) {\n        var removeStock = element \n\n        axios.post(`/api/users/watchlist/remove/${Cookies.get(\"email\")}/${Cookies.get(\"pass\")}/${removeStock}`).then((res)=>{\n            console.log(res.data); \n        }).catch((err)=>{\n            console.log(err); \n        })\n    }\n\n    const [feedback, setFeedback] = useState(\"\");\n\n    function addToList() {\n        console.log(ticker);\n        axios.post(`/api/users/watchlist/add/${ticker}/${Cookies.get(\"email\")}/${Cookies.get(\"pass\")}`).then((res) => {\n            console.log(res)\n            setFeedback(res.data)\n\n        }).then(getWatchlist).catch((err) => {\n            console.log(err)\n        })\n\n\n        setRun(run + 1);\n\n\n    }\n\n    function handleSubmit(props) {\n        props.preventDefault();\n        console.log(`${ticker} ${Cookies.get(\"email\")} ${Cookies.get(\"pass\")}`)\n\n        addToList();\n    }\n\n\n\n\n\n\n    return (\n\n\n\n\n        <div>\n            <Navbar />\n\n\n\n            <div className=\"row\">\n                <div className=\"card col-sm-6\">\n                    <h3 class=\"card-title\">Watchlist</h3>\n                    <div className=\"form\" onSubmit={evt => handleSubmit(evt)}>\n                        <div className=\"form-group\">\n                            <div className=\"form-group\">\n                                <div className=\"input-text\">\n                                    <input\n                                        type=\"text\"\n                                        name=\"ticker\"\n                                        value={ticker.value}\n                                        placeholder={\"Enter Ticker Here\"}\n                                        className=\"form-control\"\n                                        onChange={(evt) => { setTicker(evt.target.value) }}\n                                    />\n                                </div>\n                                <div className=\"row\" >\n                                    {feedback}</div>\n                            </div>\n                            <button className=\"btn btn-light col-sm-2\"\n                                type=\"submit\"\n                                onClick={addToList}\n                                style={{ margin: '25px' }}>Add Stock\n                            </button>\n\n\n\n\n\n\n                            <ul className=\"col-7-md list-group list-group-flush\">\n                                {tickerList}\n                            </ul>\n\n                        </div>\n                    </div>\n                </div>\n            </div >\n        </div >\n\n\n\n    )\n\n\n} export default Watchlist; ","/home/rashad/Downloads/StockApp/stock-app/src/Components/js/Navbar.js",[],["131","132"],"/home/rashad/Downloads/StockApp/stock-app/src/Components/js/TestPage.js",[],"/home/rashad/Downloads/StockApp/stock-app/src/Components/js/TradingView/TradingView-MainChart.js",["133","134","135","136","137"],"import React, { useEffect, useState } from 'react';\nimport TradingViewWidget, { Themes, BarStyles, HEIKIN_ASHI } from 'react-tradingview-widget'\n\nfunction Chart(props) {\n    const script = document.createElement('script');\n\n    \n\n   \n\n\n\n    console.log(\"Main chart \" + props.theme);\n    return (\n        \n        <section id=\"MainChart\">\n            <div>\n                <br/>\n                \n                <div className=\"tradingView\">\n                    <TradingViewWidget\n                        symbol={props.name}\n                        \n                        theme='dark'\n                        locale=\"en\"\n                        autosize\n                        BarStyles={HEIKIN_ASHI}\n                        studies={props.indicators}\n\n                    />\n\n                </div>\n                \n            </div>\n        </section>\n\n    );\n\n} export default Chart;","/home/rashad/Downloads/StockApp/stock-app/src/Components/js/TradingView/TradingView-Financials.js",["138","139","140"],"import React, { useEffect, useState } from 'react';\nimport Cookies from 'js-cookie';\nfunction Financials(props) {\n    const script = document.createElement('script');\n    const width = visualViewport.width.valueOf() * 0.75;\n   \n    useEffect(() => {\n        const symbol = Cookies.get(\"currentStock\");\n \n        script.src = \"https://s3.tradingview.com/external-embedding/embed-widget-financials.js\"\n        script.async = true;\n\n        script.innerHTML = JSON.stringify({\n            \"symbol\": `${Cookies.get('currentStock')}`,\n            \"height\": \"500\",\n            \"width\": `${width}`,\n            \"locale\": \"en\",\n            \"dateRange\": \"12M\",\n            \"colorTheme\": \"dark\",\n            \"trendLineColor\": \"#37a6ef\",\n            \"underLineColor\": \"#E3F2FD\",\n            \"isTransparent\": false,\n            \"autosize\": true,\n            \"largeChartUrl\": \"\",\n            \"displayMode\": \"compact\"\n\n        })\n        document.getElementById(\"financialContainer\").appendChild(script);\n    }, []);\n\n\n\n    return (\n        <section id=\"Financials\">\n            <div id=\"financialContainer\">\n                <div className=\"tradingview-widget-container\" >\n                    <div className=\"tradingview-widget-container__widget\" >\n\n                    </div>\n                </div>\n            </div>\n        </section>\n    );\n\n} export default Financials;","/home/rashad/Downloads/StockApp/stock-app/src/Components/js/TradingView/TradingView-Profile.js",["141","142","143"],"import React, { useEffect, useState } from 'react';\nimport bootstrap from 'bootstrap';\nimport Cookies from 'js-cookie'\nfunction Profile(props) {\n    const script = document.createElement('script');\n    const width = visualViewport.width.valueOf() * 0.75; \n\n    \n    useEffect(() => {\n        const symbol = Cookies.get(\"currentStock\"); \n        console.log(symbol);\n        script.src = \"https://s3.tradingview.com/external-embedding/embed-widget-symbol-profile.js\"\n        script.async = true;\n        script.innerHTML = JSON.stringify({\n            \"symbol\": `${Cookies.get('currentStock')}`,\n            \"height\": \"300\",\n            \"width\": `${width}`,\n            \"locale\": \"en\",\n            \"dateRange\": \"12M\",\n            \"colorTheme\": \"dark\",\n            \"trendLineColor\": \"#37a6ef\",\n            \"underLineColor\": \"#E3F2FD\",\n            \"isTransparent\": false,\n            \"autosize\": true,\n            \"largeChartUrl\": \"\",\n            \"displayMode\": \"compact\"\n\n        })\n        document.getElementById(\"profileContainer\").appendChild(script);\n    }, []);\n\n\n\n    return (\n        <section id=\"Profile\">\n            <div id=\"profileContainer\" >\n                <div className=\"tradingview-widget-container\">\n                    <div className=\"tradingview-widget-container__widget\">\n\n                    </div>\n                </div>\n            </div>\n        </section>\n\n    );\n\n} export default Profile;","/home/rashad/Downloads/StockApp/stock-app/src/Components/js/TradingView/TradingView-TickerTape.js",["144","145","146"],"import React, { useEffect, useState } from 'react';\nimport Cookies from 'js-cookie'; \nimport axios from 'axios';\n\n\nfunction TickerTape() {\n\n\n    const [user, setUser] = useState({\n        name: sessionStorage.getItem('sessionName'),\n        email: sessionStorage.getItem('sessionEmail'),\n        password: sessionStorage.getItem('sessionPassword'),\n        authenticated: sessionStorage.getItem('sessionAuthenticated')\n    });\n\n    useEffect(() => {\n        console.log(user.name);\n\n\n\n        if (!Cookies.get('tickerList')) {\n            const script = document.createElement('script');\n\n            script.src = 'https://s3.tradingview.com/external-embedding/embed-widget-ticker-tape.js'\n            script.async = true;\n            \n            /*\n\n            var array = new Array(sessionList.length);\n            for (let index = 0; index < sessionList.length; index++) {\n                var string = `NASDAQ:${Cookies.get('watchlist').[index].Ticker.toUpperCase()}`\n                array[index] = {\n\n                    \"proName\": string,\n                    \"title\": string\n                }\n\n            }\n           */\n\n            script.innerHTML = JSON.stringify({\n\n                \"symbols\": [\n                    { \"proName\": \"NASDAQ:AAPL\", \"title\": \"AAPL\" },\n                    { \"proName\": \"NYSE:PLTR\", \"title\": \"PLTR\" },\n                    { \"proName\": \"NASDAQ:TSLA\", \"title\": \"TSLA\" }],\n                \"showSymbolLogo\": true,\n                \"colorTheme\": \"dark\",\n                \"isTransparent\": false,\n                \"displayMode\": \"adaptive\",\n                \"locale\": \"en\"\n            })\n            document.getElementById(\"myContainer\").appendChild(script);\n        }\n\n        else {\n            console.log(`else{}`);\n            const script = document.createElement('script');\n\n            script.src = 'https://s3.tradingview.com/external-embedding/embed-widget-ticker-tape.js'\n            script.async = true;\n\n            const watchlist = Cookies.get(\"tickerList\")\n            console.log (`stringified: ${watchlist}`) \n            \n\n            console.log(`parsed ${JSON.parse(watchlist)}`);\n\n            console.log(Array.from(watchlist))\n           \n            var newWatchlist = JSON.parse(watchlist);\n           \n            console.log(`this is the formed array ${Array.from(newWatchlist)}`); \n\n            newWatchlist = Array.from(newWatchlist); \n            \n            \n            var array = new Array(newWatchlist.length);\n            console.log(newWatchlist.length) ; \n        \n            for (let index = 0; index < newWatchlist.length; index++) {\n                var string = `${newWatchlist[index].toUpperCase()}`\n                array[index] = {\n                    \"proName\": string,\n                    \"title\": newWatchlist[index].toUpperCase()\n                }\n\n            }\n            console.log(`this is array: `);\n            console.log(array);\n\n            script.innerHTML = JSON.stringify({\n\n                \"symbols\": array,\n                \"showSymbolLogo\": true,\n                \"colorTheme\": \"dark\",\n                \"isTransparent\": false,\n                \"displayMode\": \"adaptive\",\n                \"locale\": \"en\"\n            })\n\n\n\n           \n\n            document.getElementById(\"myContainer\").appendChild(script);\n\n        }\n        \n\n\n\n\n\n\n\n\n    }, []);\n\n\n\n    return (\n        <div id=\"myContainer\">\n            <div className=\"tradingview-widget-container\">\n                <div className=\"tradingview-widget-container__widget\">\n\n                </div>\n            </div>\n        </div>\n    );\n\n} export default TickerTape;",["147","148"],"/home/rashad/Downloads/StockApp/stock-app/src/Components/js/Notes.js",["149","150","151"],"import React, { useState, useEffect } from 'react';\nimport axios from 'axios'\nimport Cookies, { getJSON } from 'js-cookie';\nimport '../css/Notes.css'\n\nfunction Notes() {\n\n    const email = Cookies.get(\"email\");\n    const pass = Cookies.get(\"pass\");\n    const stock = Cookies.get(\"currentStock\");\n    const [docs, setDocs] = useState();\n    const [currentNotes, setCurrentNotes] = useState([]);\n\n    function addNoteFunction() {\n        axios.post(`/api/users/notes/add/${email}/${pass}/${stock}/${note}`).then((res) => {\n            console.log(res.data)\n        }).then(getNotes).catch((err) => {\n            console.log(err);\n        })\n    }\n    useEffect(() => {\n        getNotes();\n    }, [])\n\n    function getNotes() {\n        axios.post(`/api/users/notes/get/${email}/${pass}/${stock}`).then((res) => {\n            res.data.stock.forEach(element => {\n                if (element.Ticker === stock) {\n                    setCurrentNotes(element.Notes)\n                }\n            });\n\n            setDocs(res.data);\n        }).catch((err) => {\n            console.log(err)\n        })\n    }\n\n    function removeFunction(element) {\n\n        var removeNote = element\n        console.log(removeNote)\n        axios.post(`/api/users/notes/remove/${email}/${pass}/${stock}/${removeNote}`).then((res) => {\n            console.log(res.data);\n        }).then(getNotes).catch((err) => {\n            console.log(err)\n        })\n    }\n\n\n    const [note, setNote] = useState('');\n    return (\n        <div className=\"container\" >\n            <div className=\"card col-sm-12 justify-content-center\" >\n                <div className=\"card-title\">\n                    {stock}\n                </div>\n                <div className=\"card-body\">\n                    <div className=\"from\">\n                        <div className=\"row justify-content-center\">\n                            <div className=\"input-text col-sm-10\">\n                                <input\n                                    type=\"text\"\n                                    name=\"Note\"\n                                    value={note.value}\n                                    placeholder={\"Enter Note Here\"}\n                                    className=\"form-control input-group-text bg-dark text-white\"\n                                    onChange={(evt) => { setNote(evt.target.value) }} />\n                            </div>\n                            <div className=\"btn btn-light col-sm-2\" type=\"submit\" onClick={addNoteFunction}>\n                                Add\n                        </div>\n\n\n\n                        </div>\n                    </div>\n                </div>\n\n                <div>\n                    <h3>\n                        <div className=\"notes-list\">\n                            <div className=\"list-group  list-group-flush\">\n                                {currentNotes.map((element) => {\n                                    return (\n                                        <div className=\"row  justify-content-center\">\n\n                                            <li className=\"list-group-item col-sm-10\">{element}</li>\n                                            <button className=\"btn btn-dark col-sm-2\" onClick={() => { removeFunction(element) }}>Remove</button>\n\n                                        </div>\n                                    )\n                                })}\n                            </div>\n                        </div>\n                    </h3>\n                </div>\n\n            </div>\n        </div>\n\n\n    )\n\n\n\n} export default Notes; ",{"ruleId":"152","severity":1,"message":"153","line":7,"column":8,"nodeType":"154","messageId":"155","endLine":7,"endColumn":17},{"ruleId":"156","replacedBy":"157"},{"ruleId":"158","replacedBy":"159"},{"ruleId":"152","severity":1,"message":"160","line":2,"column":8,"nodeType":"154","messageId":"155","endLine":2,"endColumn":14},{"ruleId":"152","severity":1,"message":"161","line":1,"column":17,"nodeType":"154","messageId":"155","endLine":1,"endColumn":26},{"ruleId":"152","severity":1,"message":"162","line":27,"column":13,"nodeType":"154","messageId":"155","endLine":27,"endColumn":17},{"ruleId":"152","severity":1,"message":"163","line":27,"column":19,"nodeType":"154","messageId":"155","endLine":27,"endColumn":26},{"ruleId":"152","severity":1,"message":"164","line":28,"column":9,"nodeType":"154","messageId":"155","endLine":28,"endColumn":17},{"ruleId":"152","severity":1,"message":"165","line":42,"column":12,"nodeType":"154","messageId":"155","endLine":42,"endColumn":23},{"ruleId":"152","severity":1,"message":"166","line":42,"column":25,"nodeType":"154","messageId":"155","endLine":42,"endColumn":39},{"ruleId":"167","severity":1,"message":"168","line":87,"column":41,"nodeType":"169","endLine":87,"endColumn":92},{"ruleId":"152","severity":1,"message":"170","line":1,"column":8,"nodeType":"154","messageId":"155","endLine":1,"endColumn":13},{"ruleId":"152","severity":1,"message":"161","line":1,"column":32,"nodeType":"154","messageId":"155","endLine":1,"endColumn":41},{"ruleId":"152","severity":1,"message":"171","line":1,"column":43,"nodeType":"154","messageId":"155","endLine":1,"endColumn":51},{"ruleId":"152","severity":1,"message":"172","line":1,"column":17,"nodeType":"154","messageId":"155","endLine":1,"endColumn":26},{"ruleId":"152","severity":1,"message":"161","line":1,"column":40,"nodeType":"154","messageId":"155","endLine":1,"endColumn":49},{"ruleId":"152","severity":1,"message":"173","line":7,"column":10,"nodeType":"154","messageId":"155","endLine":7,"endColumn":14},{"ruleId":"152","severity":1,"message":"174","line":16,"column":12,"nodeType":"154","messageId":"155","endLine":16,"endColumn":19},{"ruleId":"152","severity":1,"message":"175","line":16,"column":21,"nodeType":"154","messageId":"155","endLine":16,"endColumn":31},{"ruleId":"152","severity":1,"message":"176","line":23,"column":11,"nodeType":"154","messageId":"155","endLine":23,"endColumn":21},{"ruleId":"177","severity":1,"message":"178","line":103,"column":17,"nodeType":"154","messageId":"179","endLine":103,"endColumn":21},{"ruleId":"177","severity":1,"message":"178","line":139,"column":17,"nodeType":"154","messageId":"179","endLine":139,"endColumn":21},{"ruleId":"177","severity":1,"message":"178","line":150,"column":17,"nodeType":"154","messageId":"179","endLine":150,"endColumn":21},{"ruleId":"177","severity":1,"message":"178","line":159,"column":17,"nodeType":"154","messageId":"179","endLine":159,"endColumn":21},{"ruleId":"152","severity":1,"message":"172","line":1,"column":17,"nodeType":"154","messageId":"155","endLine":1,"endColumn":26},{"ruleId":"152","severity":1,"message":"162","line":16,"column":13,"nodeType":"154","messageId":"155","endLine":16,"endColumn":17},{"ruleId":"152","severity":1,"message":"163","line":16,"column":19,"nodeType":"154","messageId":"155","endLine":16,"endColumn":26},{"ruleId":"177","severity":1,"message":"178","line":112,"column":17,"nodeType":"154","messageId":"179","endLine":112,"endColumn":21},{"ruleId":"177","severity":1,"message":"178","line":120,"column":17,"nodeType":"154","messageId":"179","endLine":120,"endColumn":21},{"ruleId":"177","severity":1,"message":"178","line":128,"column":17,"nodeType":"154","messageId":"179","endLine":128,"endColumn":21},{"ruleId":"177","severity":1,"message":"178","line":161,"column":17,"nodeType":"154","messageId":"179","endLine":161,"endColumn":21},{"ruleId":"177","severity":1,"message":"178","line":172,"column":17,"nodeType":"154","messageId":"179","endLine":172,"endColumn":21},{"ruleId":"177","severity":1,"message":"178","line":181,"column":17,"nodeType":"154","messageId":"179","endLine":181,"endColumn":21},{"ruleId":"177","severity":1,"message":"178","line":191,"column":17,"nodeType":"154","messageId":"179","endLine":191,"endColumn":21},{"ruleId":"177","severity":1,"message":"178","line":200,"column":17,"nodeType":"154","messageId":"179","endLine":200,"endColumn":21},{"ruleId":"177","severity":1,"message":"178","line":209,"column":17,"nodeType":"154","messageId":"179","endLine":209,"endColumn":21},{"ruleId":"177","severity":1,"message":"178","line":218,"column":17,"nodeType":"154","messageId":"179","endLine":218,"endColumn":21},{"ruleId":"152","severity":1,"message":"180","line":31,"column":11,"nodeType":"154","messageId":"155","endLine":31,"endColumn":18},{"ruleId":"152","severity":1,"message":"181","line":5,"column":17,"nodeType":"154","messageId":"155","endLine":5,"endColumn":27},{"ruleId":"152","severity":1,"message":"182","line":5,"column":50,"nodeType":"154","messageId":"155","endLine":5,"endColumn":53},{"ruleId":"152","severity":1,"message":"183","line":11,"column":9,"nodeType":"154","messageId":"155","endLine":11,"endColumn":13},{"ruleId":"152","severity":1,"message":"162","line":19,"column":12,"nodeType":"154","messageId":"155","endLine":19,"endColumn":16},{"ruleId":"152","severity":1,"message":"163","line":19,"column":18,"nodeType":"154","messageId":"155","endLine":19,"endColumn":25},{"ruleId":"184","severity":1,"message":"185","line":31,"column":8,"nodeType":"186","endLine":31,"endColumn":10,"suggestions":"187"},{"ruleId":"167","severity":1,"message":"168","line":63,"column":21,"nodeType":"169","endLine":69,"endColumn":24},{"ruleId":"156","replacedBy":"188"},{"ruleId":"158","replacedBy":"189"},{"ruleId":"152","severity":1,"message":"161","line":1,"column":17,"nodeType":"154","messageId":"155","endLine":1,"endColumn":26},{"ruleId":"152","severity":1,"message":"171","line":1,"column":28,"nodeType":"154","messageId":"155","endLine":1,"endColumn":36},{"ruleId":"152","severity":1,"message":"190","line":2,"column":29,"nodeType":"154","messageId":"155","endLine":2,"endColumn":35},{"ruleId":"152","severity":1,"message":"191","line":2,"column":37,"nodeType":"154","messageId":"155","endLine":2,"endColumn":46},{"ruleId":"152","severity":1,"message":"192","line":5,"column":11,"nodeType":"154","messageId":"155","endLine":5,"endColumn":17},{"ruleId":"152","severity":1,"message":"171","line":1,"column":28,"nodeType":"154","messageId":"155","endLine":1,"endColumn":36},{"ruleId":"152","severity":1,"message":"193","line":8,"column":15,"nodeType":"154","messageId":"155","endLine":8,"endColumn":21},{"ruleId":"184","severity":1,"message":"194","line":29,"column":8,"nodeType":"186","endLine":29,"endColumn":10,"suggestions":"195"},{"ruleId":"152","severity":1,"message":"171","line":1,"column":28,"nodeType":"154","messageId":"155","endLine":1,"endColumn":36},{"ruleId":"152","severity":1,"message":"153","line":2,"column":8,"nodeType":"154","messageId":"155","endLine":2,"endColumn":17},{"ruleId":"184","severity":1,"message":"194","line":30,"column":8,"nodeType":"186","endLine":30,"endColumn":10,"suggestions":"196"},{"ruleId":"152","severity":1,"message":"197","line":3,"column":8,"nodeType":"154","messageId":"155","endLine":3,"endColumn":13},{"ruleId":"152","severity":1,"message":"163","line":9,"column":18,"nodeType":"154","messageId":"155","endLine":9,"endColumn":25},{"ruleId":"184","severity":1,"message":"198","line":118,"column":8,"nodeType":"186","endLine":118,"endColumn":10,"suggestions":"199"},{"ruleId":"156","replacedBy":"200"},{"ruleId":"158","replacedBy":"201"},{"ruleId":"152","severity":1,"message":"202","line":3,"column":19,"nodeType":"154","messageId":"155","endLine":3,"endColumn":26},{"ruleId":"152","severity":1,"message":"203","line":11,"column":12,"nodeType":"154","messageId":"155","endLine":11,"endColumn":16},{"ruleId":"184","severity":1,"message":"204","line":23,"column":8,"nodeType":"186","endLine":23,"endColumn":10,"suggestions":"205"},"no-unused-vars","'bootstrap' is defined but never used.","Identifier","unusedVar","no-native-reassign",["206"],"no-negated-in-lhs",["207"],"'Navbar' is defined but never used.","'useEffect' is defined but never used.","'user' is assigned a value but never used.","'setUser' is assigned a value but never used.","'localUse' is assigned a value but never used.","'buttonColor' is assigned a value but never used.","'setButtonColor' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'React' is defined but never used.","'useState' is defined but never used.","'Component' is defined but never used.","'json' is defined but never used.","'cookies' is assigned a value but never used.","'setCookies' is assigned a value but never used.","'callServer' is assigned a value but never used.","no-redeclare","'temp' is already defined.","redeclared","'markets' is assigned a value but never used.","'useContext' is defined but never used.","'map' is defined but never used.","'data' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getWatchlist'. Either include it or remove the dependency array.","ArrayExpression",["208"],["206"],["207"],"'Themes' is defined but never used.","'BarStyles' is defined but never used.","'script' is assigned a value but never used.","'symbol' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'script' and 'width'. Either include them or remove the dependency array.",["209"],["210"],"'axios' is defined but never used.","React Hook useEffect has a missing dependency: 'user.name'. Either include it or remove the dependency array.",["211"],["206"],["207"],"'getJSON' is defined but never used.","'docs' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getNotes'. Either include it or remove the dependency array.",["212"],"no-global-assign","no-unsafe-negation",{"desc":"213","fix":"214"},{"desc":"215","fix":"216"},{"desc":"215","fix":"217"},{"desc":"218","fix":"219"},{"desc":"220","fix":"221"},"Update the dependencies array to be: [getWatchlist]",{"range":"222","text":"223"},"Update the dependencies array to be: [script, width]",{"range":"224","text":"225"},{"range":"226","text":"225"},"Update the dependencies array to be: [user.name]",{"range":"227","text":"228"},"Update the dependencies array to be: [getNotes]",{"range":"229","text":"230"},[744,746],"[getWatchlist]",[998,1000],"[script, width]",[1061,1063],[3330,3332],"[user.name]",[694,696],"[getNotes]"]